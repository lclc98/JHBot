/*
 * This file is generated by jOOQ.
 */
package com.plumealerts.jhbot.db.tables;


import com.plumealerts.jhbot.db.DefaultSchema;
import com.plumealerts.jhbot.db.Keys;
import com.plumealerts.jhbot.db.tables.records.MinecraftWhitelistRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MinecraftWhitelist extends TableImpl<MinecraftWhitelistRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>minecraft_whitelist</code>
     */
    public static final MinecraftWhitelist MINECRAFT_WHITELIST = new MinecraftWhitelist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MinecraftWhitelistRecord> getRecordType() {
        return MinecraftWhitelistRecord.class;
    }

    /**
     * The column <code>minecraft_whitelist.DISCORD_ID</code>.
     */
    public final TableField<MinecraftWhitelistRecord, String> DISCORD_ID = createField(DSL.name("DISCORD_ID"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>minecraft_whitelist.DISCORD_USERNAME</code>.
     */
    public final TableField<MinecraftWhitelistRecord, String> DISCORD_USERNAME = createField(DSL.name("DISCORD_USERNAME"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>minecraft_whitelist.MINECRAFT_UUID</code>.
     */
    public final TableField<MinecraftWhitelistRecord, String> MINECRAFT_UUID = createField(DSL.name("MINECRAFT_UUID"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>minecraft_whitelist.MINECRAFT_USERNAME</code>.
     */
    public final TableField<MinecraftWhitelistRecord, String> MINECRAFT_USERNAME = createField(DSL.name("MINECRAFT_USERNAME"), SQLDataType.VARCHAR(16).nullable(false), this, "");

    private MinecraftWhitelist(Name alias, Table<MinecraftWhitelistRecord> aliased) {
        this(alias, aliased, null);
    }

    private MinecraftWhitelist(Name alias, Table<MinecraftWhitelistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>minecraft_whitelist</code> table reference
     */
    public MinecraftWhitelist(String alias) {
        this(DSL.name(alias), MINECRAFT_WHITELIST);
    }

    /**
     * Create an aliased <code>minecraft_whitelist</code> table reference
     */
    public MinecraftWhitelist(Name alias) {
        this(alias, MINECRAFT_WHITELIST);
    }

    /**
     * Create a <code>minecraft_whitelist</code> table reference
     */
    public MinecraftWhitelist() {
        this(DSL.name("minecraft_whitelist"), null);
    }

    public <O extends Record> MinecraftWhitelist(Table<O> child, ForeignKey<O, MinecraftWhitelistRecord> key) {
        super(child, key, MINECRAFT_WHITELIST);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<MinecraftWhitelistRecord> getPrimaryKey() {
        return Keys.PK_MINECRAFT_WHITELIST;
    }

    @Override
    public List<UniqueKey<MinecraftWhitelistRecord>> getKeys() {
        return Arrays.<UniqueKey<MinecraftWhitelistRecord>>asList(Keys.PK_MINECRAFT_WHITELIST);
    }

    @Override
    public MinecraftWhitelist as(String alias) {
        return new MinecraftWhitelist(DSL.name(alias), this);
    }

    @Override
    public MinecraftWhitelist as(Name alias) {
        return new MinecraftWhitelist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MinecraftWhitelist rename(String name) {
        return new MinecraftWhitelist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MinecraftWhitelist rename(Name name) {
        return new MinecraftWhitelist(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
